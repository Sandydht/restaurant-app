# Skenario menyukai restaurant
1. Restaurant belum disukai. (selesai)
2. Widget untuk menyukai restaurant ditampilkan. (selesai)
3. Widget untuk menyukai restaurant ditekan oleh pengguna. (selesai)
4. Restaurant ditambahkan ke daftar restaurant yang disukai. (selesai)
	a. Ternyata restaurant sudah disukai. (selesai)
		- Tidak perlu menyimpan kembali. (selesai)
	b. Data restaurant tidak memiliki ID (selesai)
		- Sistem tidak memproses penyimpanan. (selesai)
		- Sistem tidak gagal. (selesai)

# Skenario batal menyukai restaurant. (selesai)
1. Restaurant sudah disukai. (selesai)
2. Widget untuk batal menyukai restaurant ditampilkan. (selesai)
3. Widget pembatalan ditekan oleh pengguna. (selesai)
4. Restaurant dihapus dari daftar restaurant yang disukai. (selesai)
	a. Ternyata restaurant tidak ada dalam daftar restaurant yang disukai. (selesai)


# TODO
1. Alur negatif menyimpan restaurant tanpa ID tidak boleh menyebabkan kegagalan. (selesai)

---------------------------------------------------------------------------

# Use case mencari restaurant yang disukai
1. Pengguna memasukan nama restaurant yang dicari.
2. Restaurant yang dicari ditampilkan.
	a. Bila tidak ada, tampilkan informasi bahwa tidak ada restaurant yang ditemukan.

# Studi kasus
1. Bila pengguna memasukan query 'restaurant A', maka:
	a. Presenter akan meminta ke Model untuk memberikan restaurant yang disukai dengan yang cocok untuk pencarian 'restaurant A'.
	b. Presenter akan menampilkan View (DOM) semua restaurant yang dikembalikan oleh Model.
2. Bila pengguna memasukan query kosong, maka:
	a. Presenter akan meminta Model untuk memberikan semua restaurant yang disukai.
	b. Presenter akan menampilkan ke View semua restaurant yang disukai yang telah diberikan oleh Model.
3. Bila pengguna memasukan query, dan tidak ada restaurant yang cocok, maka:
	a. Presenter akan meminta Model untuk mencari restaurant.
	b. Presenter akan menampilkan informasi tidak ada restaurant yang ditemukan pada View.